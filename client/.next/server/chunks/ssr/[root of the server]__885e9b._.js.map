{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/kernel/dronevl/client/lib/RequestBuilder.ts"],"sourcesContent":["import axios from 'axios';\nimport { error } from 'console';\n\nexport class RequestBuilder {\n  // @ts-expect-error if not set\n  private static baseURL: string = process.env.NEXT_PUBLIC_BACKEND;\n  private static headers: object = {\n    'Content-Type': 'application/json',\n    Accept: '*/*',\n    'Access-Control-Allow-Origin': '*',\n  };\n  public static $get = async (endpoint: string, params: object) => {\n    try {\n      const { data: body } = await axios.get(this.baseURL + endpoint, { params, headers: this.headers });\n      return body;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log('[AXIOS]: ', error.message);\n        return error;\n      } else {\n        console.log('[TS]: ', error);\n      }\n    }\n  };\n  public static $post = async (endpoint: string, data: object, headers?: object) => {\n    try {\n      const { data: body } = await axios.post(this.baseURL + endpoint, data, { headers: headers || this.headers });\n      return body;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log('[AXIOS]: ', error.message);\n        return error;\n      } else {\n        console.log('[TS]: ', error);\n      }\n    }\n  };\n}\nnew RequestBuilder();\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM;IACX,8BAA8B;IAC9B,OAAe,wEAAkD;IACjE,OAAe,UAAkB;QAC/B,gBAAgB;QAChB,QAAQ;QACR,+BAA+B;IACjC,EAAE;IACF,OAAc,OAAO,OAAO,UAAkB;QAC5C,IAAI;YACF,MAAM,EAAE,MAAM,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU;gBAAE;gBAAQ,SAAS,IAAI,CAAC,OAAO;YAAC;YAChG,OAAO;QACT,EAAE,OAAO,OAAO;YACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;gBAC7B,QAAQ,GAAG,CAAC,aAAa,MAAM,OAAO;gBACtC,OAAO;YACT,OAAO;gBACL,QAAQ,GAAG,CAAC,UAAU;YACxB;QACF;IACF,EAAE;IACF,OAAc,QAAQ,OAAO,UAAkB,MAAc;QAC3D,IAAI;YACF,MAAM,EAAE,MAAM,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,MAAM;gBAAE,SAAS,WAAW,IAAI,CAAC,OAAO;YAAC;YAC1G,OAAO;QACT,EAAE,OAAO,OAAO;YACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;gBAC7B,QAAQ,GAAG,CAAC,aAAa,MAAM,OAAO;gBACtC,OAAO;YACT,OAAO;gBACL,QAAQ,GAAG,CAAC,UAAU;YACxB;QACF;IACF,EAAE;AACJ;AACA,IAAI"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///home/kernel/dronevl/client/app/%28admin%29/admin/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport { RequestBuilder } from \"@/lib/RequestBuilder\";\nimport { Item } from \"@/types/models\";\nimport { setConfig } from \"next/config\";\nimport { useParams } from \"next/navigation\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"sonner\";\n\nexport default function page() {\n  const [item, setItem] = useState<Item>();\n  const params = useParams();\n\n  const getItem = async () => {\n    if (params && params.id) {\n      const response = await RequestBuilder.$get(\n        `/items/fetch/${params.id}`,\n        {},\n      );\n      console.log(response);\n      if (response.status === 200) {\n        setItem(response.body.item);\n      } else {\n        toast.info(\"Что-то пошло не так\");\n      }\n    }\n  };\n  useEffect(() => {\n    getItem();\n  }, []);\n  return <div className=\"p-4\">{item?.count}</div>;\n}\n"],"names":[],"mappings":";;;;AACA;AAGA;AACA;AACA;AANA;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,UAAU;QACd,IAAI,UAAU,OAAO,EAAE,EAAE;YACvB,MAAM,WAAW,MAAM,qHAAA,CAAA,iBAAc,CAAC,IAAI,CACxC,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAC3B,CAAC;YAEH,QAAQ,GAAG,CAAC;YACZ,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,QAAQ,SAAS,IAAI,CAAC,IAAI;YAC5B,OAAO;gBACL,wIAAA,CAAA,QAAK,CAAC,IAAI,CAAC;YACb;QACF;IACF;IACA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IACL,qBAAO,8OAAC;QAAI,WAAU;kBAAO,MAAM;;;;;;AACrC"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}