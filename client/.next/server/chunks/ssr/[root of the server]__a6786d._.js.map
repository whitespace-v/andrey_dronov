{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/kernel/dronevl/client/lib/RequestBuilder.ts"],"sourcesContent":["import axios from 'axios';\nimport { error } from 'console';\n\nexport class RequestBuilder {\n  // @ts-expect-error if not set\n  private static baseURL: string = process.env.NEXT_PUBLIC_BACKEND;\n  private static headers: object = {\n    'Content-Type': 'application/json',\n    Accept: '*/*',\n    'Access-Control-Allow-Origin': '*',\n  };\n  public static $get = async (endpoint: string, params: object) => {\n    try {\n      const { data: body } = await axios.get(this.baseURL + endpoint, { params, headers: this.headers });\n      return body;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log('[AXIOS]: ', error.message);\n        return error;\n      } else {\n        console.log('[TS]: ', error);\n      }\n    }\n  };\n  public static $post = async (endpoint: string, data: object, headers?: object) => {\n    try {\n      const { data: body } = await axios.post(this.baseURL + endpoint, data, { headers: headers || this.headers });\n      return body;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log('[AXIOS]: ', error.message);\n        return error;\n      } else {\n        console.log('[TS]: ', error);\n      }\n    }\n  };\n}\nnew RequestBuilder();\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM;IACX,8BAA8B;IAC9B,OAAe,wEAAkD;IACjE,OAAe,UAAkB;QAC/B,gBAAgB;QAChB,QAAQ;QACR,+BAA+B;IACjC,EAAE;IACF,OAAc,OAAO,OAAO,UAAkB;QAC5C,IAAI;YACF,MAAM,EAAE,MAAM,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU;gBAAE;gBAAQ,SAAS,IAAI,CAAC,OAAO;YAAC;YAChG,OAAO;QACT,EAAE,OAAO,OAAO;YACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;gBAC7B,QAAQ,GAAG,CAAC,aAAa,MAAM,OAAO;gBACtC,OAAO;YACT,OAAO;gBACL,QAAQ,GAAG,CAAC,UAAU;YACxB;QACF;IACF,EAAE;IACF,OAAc,QAAQ,OAAO,UAAkB,MAAc;QAC3D,IAAI;YACF,MAAM,EAAE,MAAM,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,MAAM;gBAAE,SAAS,WAAW,IAAI,CAAC,OAAO;YAAC;YAC1G,OAAO;QACT,EAAE,OAAO,OAAO;YACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;gBAC7B,QAAQ,GAAG,CAAC,aAAa,MAAM,OAAO;gBACtC,OAAO;YACT,OAAO;gBACL,QAAQ,GAAG,CAAC,UAAU;YACxB;QACF;IACF,EAAE;AACJ;AACA,IAAI"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///home/kernel/dronevl/client/app/%28admin%29/admin/%5Bid%5D/page.tsx"],"sourcesContent":["import { RequestBuilder } from \"@/lib/RequestBuilder\";\nimport { useParams } from \"next/navigation\";\nimport React from \"react\";\n\nexport default function page() {\n  const params = useParams();\n  console.log(params);\n\n  const getItem = async () => {\n    // const response = await RequestBuilder.$get(\"/item\");\n  };\n  return <div></div>;\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;;;AAGe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,qLAAA,CAAA,YAAS,AAAD;IACvB,QAAQ,GAAG,CAAC;IAEZ,MAAM,UAAU;IACd,uDAAuD;IACzD;IACA,qBAAO,8OAAC;;;;;AACV"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}